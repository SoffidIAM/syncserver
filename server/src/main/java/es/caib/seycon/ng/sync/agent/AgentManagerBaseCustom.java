// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceBase.vsl in andromda-spring-cartridge.
//
package es.caib.seycon.ng.sync.agent;

/**
 * <p>
 * Spring Service base class for <code>es.caib.seycon.ng.sync.agent.AgentManager</code>,
 * provides access to all services and entities referenced by this service.
 * </p>
 *
 * @see es.caib.seycon.ng.sync.agent.AgentManager
 */
public abstract class AgentManagerBaseCustom
    implements es.caib.seycon.ng.sync.agent.AgentManager
{

    /**
     * @see es.caib.seycon.ng.sync.agent.AgentManager#createLocalAgent(es.caib.seycon.ng.comu.Dispatcher)
     */
    public java.lang.Object createLocalAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher)
        throws es.caib.seycon.ng.exception.InternalErrorException
    {
        if (dispatcher == null)
        {
            throw new IllegalArgumentException(
                "es.caib.seycon.ng.sync.agent.AgentManager.createLocalAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher) - 'dispatcher' can not be null");
        }
        if (dispatcher.getCodi() == null || dispatcher.getCodi().trim().length() == 0)
        {
            throw new IllegalArgumentException(
                "es.caib.seycon.ng.sync.agent.AgentManager.createLocalAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher) - 'dispatcher.codi' can not be null or empty");
        }
        if (dispatcher.getDominiUsuaris() == null || dispatcher.getDominiUsuaris().trim().length() == 0)
        {
            throw new IllegalArgumentException(
                "es.caib.seycon.ng.sync.agent.AgentManager.createLocalAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher) - 'dispatcher.dominiUsuaris' can not be null or empty");
        }
        try
        {
            return this.handleCreateLocalAgent(dispatcher);
        }
        catch (es.caib.seycon.ng.exception.InternalErrorException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.caib.seycon.ng.exception.InternalErrorException (
                "Error performing 'es.caib.seycon.ng.sync.agent.AgentManager.createLocalAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #createLocalAgent(es.caib.seycon.ng.comu.Dispatcher)}
      */
    protected abstract java.lang.Object handleCreateLocalAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher)
        throws java.lang.Exception;

    /**
     * @see es.caib.seycon.ng.sync.agent.AgentManager#createAgent(es.caib.seycon.ng.comu.Dispatcher)
     */
    public java.lang.String createAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher)
        throws es.caib.seycon.ng.exception.InternalErrorException
    {
        if (dispatcher == null)
        {
            throw new IllegalArgumentException(
                "es.caib.seycon.ng.sync.agent.AgentManager.createAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher) - 'dispatcher' can not be null");
        }
        if (dispatcher.getCodi() == null || dispatcher.getCodi().trim().length() == 0)
        {
            throw new IllegalArgumentException(
                "es.caib.seycon.ng.sync.agent.AgentManager.createAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher) - 'dispatcher.codi' can not be null or empty");
        }
        if (dispatcher.getDominiUsuaris() == null || dispatcher.getDominiUsuaris().trim().length() == 0)
        {
            throw new IllegalArgumentException(
                "es.caib.seycon.ng.sync.agent.AgentManager.createAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher) - 'dispatcher.dominiUsuaris' can not be null or empty");
        }
        try
        {
            return this.handleCreateAgent(dispatcher);
        }
        catch (es.caib.seycon.ng.exception.InternalErrorException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.caib.seycon.ng.exception.InternalErrorException (
                "Error performing 'es.caib.seycon.ng.sync.agent.AgentManager.createAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher)' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #createAgent(es.caib.seycon.ng.comu.Dispatcher)}
      */
    protected abstract java.lang.String handleCreateAgent(es.caib.seycon.ng.comu.Dispatcher dispatcher)
        throws java.lang.Exception;

    /**
     * @see es.caib.seycon.ng.sync.agent.AgentManager#reset()
     */
    public void reset()
        throws es.caib.seycon.ng.exception.InternalErrorException
    {
        try
        {
            this.handleReset();
        }
        catch (es.caib.seycon.ng.exception.InternalErrorException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.caib.seycon.ng.exception.InternalErrorException (
                "Error performing 'es.caib.seycon.ng.sync.agent.AgentManager.reset()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #reset()}
      */
    protected abstract void handleReset()
        throws java.lang.Exception;

    /**
     * @see es.caib.seycon.ng.sync.agent.AgentManager#getCertificateValidityDate()
     */
    public java.util.Date getCertificateValidityDate()
        throws es.caib.seycon.ng.exception.InternalErrorException
    {
        try
        {
            return this.handleGetCertificateValidityDate();
        }
        catch (es.caib.seycon.ng.exception.InternalErrorException ex)
        {
            throw ex;
        }
        catch (Throwable th)
        {
            throw new es.caib.seycon.ng.exception.InternalErrorException (
                "Error performing 'es.caib.seycon.ng.sync.agent.AgentManager.getCertificateValidityDate()' --> " + th,
                th);
        }
    }

     /**
      * Performs the core logic for {@link #getCertificateValidityDate()}
      */
    protected abstract java.util.Date handleGetCertificateValidityDate()
        throws java.lang.Exception;

    /**
     * Gets the current <code>principal</code> if one has been set,
     * otherwise returns <code>null</code>.
     *
     * @return the current principal
     */
    protected java.security.Principal getPrincipal()
    {
        return com.soffid.iam.PrincipalStore.get();
    }
}